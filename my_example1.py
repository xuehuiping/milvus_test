# -*- coding: utf-8 -*-
# author: huihui
# date: 2019/12/16 11:00 上午 

import sys

from milvus import Milvus, IndexType, MetricType

# Milvus server IP address and port.
# You may need to change _HOST and _PORT accordingly.
_HOST = '182.92.233.254'
_PORT = '19530'  # default value

# Vector parameters
_DIM = 100  # dimension of vector
milvus = Milvus()

# Connect to Milvus server
# You may need to change _HOST and _PORT accordingly
param = {'host': _HOST, 'port': _PORT}
status = milvus.connect(**param)
if status.OK():
    print("Server connected.")
else:
    print("Server connect fail.")
    sys.exit(1)

# Create table demo_table if it dosen't exist.
table_name = 'kuakua_table'

# Use the top 10 vectors for similarity search
query_vectors = [
    [0.20940371, -0.17033057, 0.28627267, -0.25178754, 0.79724896, -0.113316044, 0.37231755, -0.3602077, 0.44894308,
     -0.6582883, -0.49854413, 0.4140659, 0.14856431, 0.038329832, 0.3710033, 0.67673594, -0.009421826, 1.0909468,
     0.21934123, -0.551969, -0.37521404, 0.050391655, 0.32998753, -0.52887315, 0.31696156, 0.5319852, 1.1812494,
     0.17307116, 0.32611448, 0.6604259, 0.12730497, -0.45017195, -0.53090495, -0.3191464, 0.70220923, -0.7486416,
     0.3642195, 0.8459606, -0.04542854, -1.2594401, -0.43724918, 0.4443482, -0.41165113, 0.13811773, -0.16565768,
     0.1278402, 0.3423645, 0.23089948, 0.23098332, 0.32044494, -0.26731682, 0.48318106, -0.071081705, -0.08788901,
     -0.34767026, -0.33153862, 0.44187558, 0.5005352, -0.7985111, -0.13482271, 0.02109686, 0.1093013, -0.19181009,
     0.38039458, -0.08842422, 0.36176455, -0.056097806, 0.19723046, 0.13883132, 0.44696778, -0.35569265, -0.20916185,
     -0.033602975, -0.42181465, -0.16912636, -0.122908875, 0.6637012, 0.14807567, -0.35692576, 0.33385026, 0.17518727,
     -0.21100366, -0.48156404, 0.08824362, -0.27856544, 0.30156058, -0.51354, 0.7561194, 0.29189253, -0.7186851,
     -0.0054703336, 0.22050965, -0.31565553, -0.10171683, -0.3123253, -0.20907445, -0.84590214, -0.067407094, 0.3335432,
     -1.0036621],
    [-0.03630828, -0.6638629, -0.017252788, -0.595304, 1.0279835, 0.029304914, 0.57134855, -0.6477195, 0.98150295,
     -0.97629964, 0.72127223, 0.63295907, 0.99766797, 0.3730691, 1.2779312, 0.5757123, -0.30925396, -0.051997267,
     -0.6849845, 0.8145824, -0.012620773, -0.04276477, 1.1589798, -1.3532555, 0.83005047, 0.7027698, 1.6697998,
     -0.47264302, -0.24378647, 1.2383262, -1.1798716, 0.041985147, -0.8188133, 0.26633915, 0.26399985, 0.085279174,
     0.74273485, 0.2730783, -0.2686224, -1.0302553, 0.49330255, 1.0349264, 0.20416142, 0.3392736, 0.13389885, 0.2773,
     0.26721314, 0.56892216, 1.0092585, -0.30272508, -0.18722296, 0.4876639, -0.07179303, -0.40572608, 0.49985024,
     0.047047686, 1.1391233, 1.2993114, -0.3011957, -0.37249932, -0.5083653, 0.7992064, 0.18703017, 1.0032773,
     -1.1318204, -0.19605792, -1.3306865, -0.3531831, 0.5666963, 0.29856145, -0.5481257, 0.5164241, -0.05420585,
     -5.943783E-4, -0.05749447, 1.1725185, 0.41604874, -0.3605747, -0.21641175, 0.069758736, -0.19353922, -0.44148606,
     -0.7951143, 0.08231953, -0.083731465, 1.9785949, -0.8882056, 0.40050718, 0.13536797, -0.9430659, -0.192105,
     -0.2902811, -0.54964644, -0.3352016, -0.8886048, -0.0424816, -0.78528, -0.55595464, 0.61223614, -0.3730786],
    [0.15277308, -0.13171153, 0.107327946, 0.0837903, 0.38026035, -0.36213908, 0.28940922, -0.25397867, 0.24979469,
     -1.076854, 0.1834156, 0.19667983, 0.55860674, 0.033102702, 0.45081407, 0.6892771, -0.53544366, 0.50009704,
     -0.059191573, 0.21374545, -0.25139847, 0.04086145, 0.42410442, -0.81112415, 0.90084165, 1.0065526, 1.1769617,
     -0.5869076, -0.094391555, 0.49062654, -0.5216536, -0.6684265, -0.5677854, -0.604885, 0.21391822, -0.0027978586,
     0.7609041, 0.5745474, 0.05894222, -1.0950239, -0.5976424, 0.7065844, -0.19099596, 0.02270365, 0.13205323,
     0.6510311, 0.039719824, 0.13592367, 0.49082816, 0.051157996, -0.015108519, 0.45460346, 0.20967677, -0.4706333,
     -0.27026418, 0.060019255, 0.8492112, 0.7321073, -0.60551864, 0.028278468, -0.37191334, 0.54662526, -0.20290485,
     0.49677, -0.43720844, 0.03745689, -0.6393786, -0.18425518, 0.33051586, 0.46704382, -0.20752223, 0.19789515,
     0.12605545, -0.26321045, -0.30945435, 0.45601174, 0.30186024, 0.023872789, -0.3294415, 0.1771211, -0.35085505,
     -0.44950038, -0.39031136, 0.16737661, -0.21481912, 1.1868834, -0.8034554, 0.618576, -0.026450207, -0.8493607,
     0.035884734, -0.3388682, -0.27655926, 0.1953743, -0.23999661, -0.46588194, -0.31142354, -0.14259006, 0.71359366,
     -0.72168064],
    [0.39610067, -0.37899622, 0.0666082, -0.48089218, 0.71979606, -0.25536585, 0.65591866, -0.6148431, 0.27535632,
     -0.75417817, -0.35338086, 0.41295385, 0.50060403, 0.2237106, 0.98388934, 1.0650649, 0.27707198, 0.8801569,
     -0.20446715, -0.43780646, -0.61263424, 0.15645117, 0.8065801, -0.7689329, 0.4914263, 0.40398854, 1.5397032,
     -0.42876524, 0.028500093, 0.9955181, -0.29957804, -0.45102435, -0.39702398, -0.26838613, 0.52569544, -0.22159262,
     0.5680046, 0.71817625, 0.16040961, -1.2289426, -0.15482539, 0.5877765, -0.55842817, 0.0035491243, 0.25006703,
     -0.007875174, 0.41398832, 0.05736152, 0.65825003, 0.49100587, -0.5452279, 0.92817837, -0.002486614, -0.501551,
     -0.027684709, -0.23612474, 0.96403, 0.5048563, -0.8390969, -0.6783737, 0.16257241, 0.40699333, 0.1530659,
     0.45216227, 0.20740011, -0.16636114, -0.56117713, 0.460791, 0.5197062, 0.32992068, -0.67972493, 0.006203198,
     -0.66891724, -0.20584051, -0.19870679, -0.33825624, 0.6137559, -0.35808063, -0.5071189, 0.59697187, 0.28742316,
     -0.04888594, -1.1361288, 0.119902074, -0.37177378, 1.0926182, -0.35907677, 1.060146, 0.55725056, -0.4780923,
     -0.07891681, -0.24193528, -0.29553786, -0.5691812, -0.5040918, 0.15001084, -1.2189838, -0.61226004, 0.59772736,
     -1.0541898],
    [0.07567687, 0.4097321, -0.29588467, 0.922499, 1.5313486, 0.99182665, 1.2356557, -0.20684968, 1.383647, -0.610059,
     -0.12598798, -0.6138412, 0.0029679295, -0.38357922, 0.28147158, 0.38312548, 0.025072921, 1.9621615, 1.1466967,
     -0.75707346, -0.4213672, 0.1451436, -0.32215595, -1.9222585, 0.5304532, 1.9680741, 2.0279665, -0.072849125,
     0.7118019, 0.47547227, 0.83175653, 0.9161753, -0.49178067, 1.3236061, 0.70742524, -0.88333035, 0.72815454,
     -0.40690064, -0.46641314, -1.0544347, 0.07771078, 1.140125, -1.1880553, 0.4991816, 0.06062634, -1.1744998,
     0.28271052, 0.3182467, 0.1372883, -0.6450158, -1.534524, -0.35345522, 0.6315718, -0.9307984, 0.8770079, -0.6486846,
     1.124581, 1.3941135, -1.9738286, -0.89990175, -0.38250908, 0.24769396, -0.41266754, 2.155008, -0.010340247,
     0.32527405, 0.006945601, -0.5126889, -0.9243995, -0.0010754394, -0.47145146, -0.529004, 1.0286558, 0.5292762,
     -0.16595195, -0.21956773, 0.39311853, -0.73070467, -1.0268785, -1.0986229, -0.32469016, -0.08098337, -0.6041956,
     0.85059285, 0.18747018, 0.8443685, 0.1504093, 0.24704567, -1.0056467, -0.47530964, -0.11381556, 0.42411643,
     0.98064613, -0.88597995, 0.03554549, -1.3124635, -1.1102965, 0.041209664, -0.6390698, -1.1273707]]

# execute vector similarity search
param = {
    'table_name': table_name,
    'query_records': query_vectors,
    'top_k': 10,
    'nprobe': 16
}
status, results = milvus.search_vectors(**param)

if status.OK():
    # indicate search result
    # also use by:
    #   `results.distance_array[0][0] == 0.0 or results.id_array[0][0] == ids[0]`
    if results[0][0].distance == 0.0 :
        print('Query result is correct')
    else:
        print('Query result isn\'t correct')

# print results
print(results)
